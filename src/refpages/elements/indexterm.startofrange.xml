<?xml version="1.0" encoding="utf-8"?>
<refentry xmlns="http://docbook.org/ns/docbook"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          version="5.0">
<refmeta>
  <refentrytitle><?tdg-refentrytitle?></refentrytitle>
  <refmiscinfo role="element">indexterm</refmiscinfo>
  <refmiscinfo role="pattern">db.indexterm.startofrange</refmiscinfo>
</refmeta>

<refnamediv>
  <refname><?tdg-refname?></refname>
  <refpurpose><?tdg-refpurpose?></refpurpose>
</refnamediv>

<?tdg-refsynopsisdiv?>

<refsection condition="ref.description">
<title>Description</title>

<para>A “start of range” <tag>indexterm</tag> marks the start of a
range. It must have an associated “end of range” <tag>indexterm</tag>.
The resulting index entry applies to the entire range. See <xref
linkend="element.db.indexterm.singular"/>.</para>

<important role="fu">
<para>The <tag class="attribute">xml:id</tag> attribute will be made
required in DocBook V6.0.</para>
<para>A Schematron constraint will be added to assert that for every
“start of range” index term, there is exactly one “end of range” index
term that points to it.
</para>
</important>

<refsection>
<title>Processing expectations</title>

<para>See <xref linkend="element.db.indexterm.singular"/>.</para>

<para>It is possible to construct index terms that are difficult to
parse at best and totally illogical at worst. Consider the
following:</para>

<screen>&lt;indexterm class='startofrange' zone="id1 id2"&gt;...&lt;/indexterm&gt;</screen>

<para>There is no way that this can fit into the semantics of an
<tag>indexterm</tag>. Although it claims to be the start of a range,
it does not have an <tag class="attribute">xml:id</tag> for the
end-of-range <tag>indexterm</tag> to point back to. In addition, it
includes zoned terms, and mixing the two different methods for
indicating a range in the same <tag>indexterm</tag> is probably a bad
idea.</para>
</refsection>

<?tdg-attributes?>
<?tdg-parents?>
<?tdg-children?>

</refsection>

<?tdg-seealso?>

<refsection condition="ref.examples">
<title>Examples</title>

<programlisting><xi:include href="../examples/indexterm.2.xml" parse="text"/></programlisting>

</refsection>

</refentry>
