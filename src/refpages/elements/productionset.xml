<?xml version="1.0" encoding="utf-8"?><refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">
<info>
  <pubdate>$Date$</pubdate>
  <releaseinfo>$Revision$</releaseinfo>
</info>

<refmeta>
  <refentrytitle><?tdg-refentrytitle?></refentrytitle>
  <refmiscinfo role="element">productionset</refmiscinfo>
  <refmiscinfo role="pattern">db.productionset</refmiscinfo>
</refmeta>

<refnamediv>
  <refname><?tdg-refname?></refname>
  <refpurpose><?tdg-refpurpose?></refpurpose>
</refnamediv>

<?tdg-refsynopsisdiv?>

<refsection condition="ref.description">
<title>Description</title><para>A <tag>productionset</tag> is a collection of
      <glossterm>Extended Backus-Naur Form</glossterm> (EBNF)
      <tag>production</tag>s.</para>

      <para>EBNF is a notation for describing the grammar of context-free
      languages. Even if you aren’t conversant in the programming language
      concepts of context-free languages and grammars, it’s not really as hard
      to understand as it sounds.</para>

      <refsection><info><title>Processing expectations</title></info>
        

        <para>Formatted as a displayed block. The detailed processing
        expectations with respect to individual productions, lefthand sides,
        and righthand sides are quite complex.</para>

        <para>The <tag>production</tag>s should be numbered.</para>
</refsection>

<?tdg-attributes?>
<?tdg-parents?>
<?tdg-children?>

</refsection>

<?tdg-seealso?>

<refsection condition="ref.examples">
<title>Examples</title>

<para>A set of EBNF productions describes the legal arrangements of
tokens in a language. Consider arithmetic expressions as a simple
example.</para>

<para>The expression
<quote><literal>3 + 4</literal></quote>
is valid and so is
<quote><literal>3 + 4 - 5</literal></quote>, but
<quote><literal>3 - + - 4</literal></quote> is not, nor is
<quote><literal>3 + 4 6</literal></quote>. We can use EBNF to
describe all the possible legal arrangements:</para>

<anchor xml:id="ex.os.productionset.1" role="HACK-ex.out.start"/>
<xi:include href="../examples/productionset.1.xml" xpointer="/1/2/2"/>
<xi:include href="../examples/productionset.1.xml" xpointer="/1/2/3"/>
<anchor xml:id="ex.oe.productionset.1" role="HACK-ex.out.end"/>

<para>That is expressed in DocBook like this:</para>

<programlisting><xi:include href="../examples/productionset.1.xml" parse="text"/></programlisting>

</refsection>

</refentry>
